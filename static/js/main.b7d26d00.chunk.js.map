{"version":3,"sources":["App.js","index.js"],"names":["cardStyle","display","border","borderRadius","padding","gridTemplateColumns","cardHeadersStyle","fontSize","textAlign","cardContentsStyle","DisplayZones","props","showMoreZones","fullZoneList","moment","tz","zonesForCountry","sort","arraySortCompareOffsets","useState","Set","moreZones","setMoreZones","addedZones","setAddedZones","currentTimeZone","guess","size","addedZonesInStorage","localStorage","getItem","JSON","parse","newMoreZones","forEach","zone","delete","newAddedZones","add","updateLocalStorage","style","width","maxWidth","alignItems","flex","DisplayAddedZones","removeZone","selectedZone","newAmericanZones","DisplayMoreZones","addZone","a","b","utcOffset","removeItem","setItem","stringify","Array","from","RenderMoreZonesButton","toggleShowMoreZones","ShowHide","onClick","timeZone","setTimeZone","Date","toISOString","dateTime","setDateTime","addedZonesComponents","values","push","DisplayAddedZone","removeZoneOnClick","zoneListOptions","value","defaultValue","onChange","event","target","type","dateTimeInZone","format","zones","DisplayMoreZone","addZoneOnClick","App","setShowMoreZones","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7d26d00.chunk.js","sourcesContent":["import './App.css';\nimport moment from 'moment-timezone';\nimport { useState } from 'react';\n\nconst cardStyle = { display: 'inline-grid', border: '1px solid black', borderRadius: '10px', padding: '10px', gridTemplateColumns: '1fr 1fr auto' };\nconst cardHeadersStyle = { fontSize: 'medium', textAlign: 'center', padding: '0 10px' };\nconst cardContentsStyle = { fontSize: 'x-large', textAlign: 'center', padding: '0 10px' };\n\nfunction App() {\n    const [showMoreZones, setShowMoreZones] = useState(false);\n    const toggleShowMoreZones = () => {\n        setShowMoreZones(!showMoreZones);\n    }\n\n    return (\n        <div>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', maxWidth: '1980px' }}>\n                <div></div>\n                <RenderMoreZonesButton toggleShowMoreZones={toggleShowMoreZones} showMoreZones={showMoreZones} />\n            </div>\n            <DisplayZones showMoreZones={showMoreZones} />\n        </div>\n    );\n}\n\nfunction DisplayZones(props) {\n    let { showMoreZones } = props;\n\n    const fullZoneList = moment.tz.zonesForCountry('US').sort(arraySortCompareOffsets);\n    const [moreZones, setMoreZones] = useState(new Set(fullZoneList));\n    const [addedZones, setAddedZones] = useState(new Set());\n    const currentTimeZone = moment.tz.guess();\n\n    if (addedZones.size < 1) {\n        const addedZonesInStorage = localStorage.getItem('addedZones');\n        if (addedZonesInStorage) {\n            setAddedZones(new Set(JSON.parse(addedZonesInStorage)));\n            const newMoreZones = new Set(moreZones);\n            JSON.parse(addedZonesInStorage).forEach((zone) => {\n                newMoreZones.delete(zone);\n            })\n            setMoreZones(newMoreZones);\n        } else {\n            const newAddedZones = new Set(addedZones);\n            newAddedZones.add('UTC');\n            newAddedZones.add(currentTimeZone);\n            setAddedZones(newAddedZones);\n\n            const newMoreZones = new Set(moreZones);\n            newMoreZones.delete('UTC');\n            newMoreZones.delete(currentTimeZone);\n            setMoreZones(newMoreZones);\n\n            updateLocalStorage(newAddedZones);\n        }\n    }\n\n    const addZone = (selectedZone) => {\n        const newAddedZones = new Set(addedZones);\n        newAddedZones.add(selectedZone);\n        setAddedZones(newAddedZones);\n\n        const newAmericanZones = new Set(moreZones);\n        newAmericanZones.delete(selectedZone);\n        setMoreZones(newAmericanZones);\n\n        updateLocalStorage(newAddedZones);\n    }\n\n    const removeZone = (selectedZone) => {\n        const newAmericanZones = new Set(moreZones);\n        newAmericanZones.add(selectedZone);\n        setMoreZones(newAmericanZones);\n\n        const newAddedZones = new Set(addedZones);\n        newAddedZones.delete(selectedZone);\n        setAddedZones(newAddedZones);\n\n        updateLocalStorage(newAddedZones);\n    }\n\n    return (\n        <div style={{ display: 'flex', width: '100%', maxWidth: '1980px', alignItems: 'stretch' }}>\n            <div style={{ flex: '1 1' }}>\n                <DisplayAddedZones \n                    addedZones={addedZones} \n                    removeZone={removeZone} \n                    fullZoneList={fullZoneList}\n                    currentTimeZone={currentTimeZone}\n                />\n            </div>\n            <div style={{ flex: '1 1' }}>\n                <DisplayMoreZones moreZones={moreZones} showMoreZones={showMoreZones} addZone={addZone} />\n            </div>\n        </div>\n    )\n}\n\nfunction arraySortCompareOffsets(a, b) {\n    if (moment().tz(a).utcOffset() < moment().tz(b).utcOffset()) {\n        return 1;\n    }\n    if (moment().tz(a).utcOffset() > moment().tz(b).utcOffset()) {\n        return -1;\n    }\n    return 0;\n}\n\nfunction updateLocalStorage(addedZones) {\n    if (addedZones.size === 0) {\n        localStorage.removeItem('addedZones');\n    }\n    if (addedZones.size > 0) {\n        localStorage.setItem('addedZones', JSON.stringify(Array.from(addedZones)));\n    }\n}\n\nfunction RenderMoreZonesButton(props) {\n    const buttonStyle = { fontSize: 'large' };\n    const { toggleShowMoreZones, showMoreZones } = props;\n    const ShowHide = showMoreZones ? 'Hide' : 'Show';\n    return (\n        <button style={buttonStyle} onClick={toggleShowMoreZones}>{ShowHide} More Zones</button>\n    )\n}\n\n\n\nfunction DisplayAddedZones(props) {\n    let { addedZones, removeZone, fullZoneList, currentTimeZone } = props;\n    const [ timeZone, setTimeZone ] = useState(currentTimeZone);\n    const [ dateTime, setDateTime ] = useState(new Date().toISOString());\n    const addedZonesComponents = [];\n    for (const zone of addedZones.values()) {\n        const removeZoneOnClick = () => { removeZone(zone); }\n        addedZonesComponents.push(\n            <DisplayAddedZone key={zone} dateTime={dateTime} timeZone={timeZone} zone={zone} removeZoneOnClick={removeZoneOnClick} />\n        )\n    }\n    const zoneListOptions = [];\n    fullZoneList.forEach((zone) => {\n        zoneListOptions.push(<option key={zone} value={zone}>{zone}</option>)\n    })\n    const handleZoneChange = (event) => {\n        setTimeZone(event.target.value);\n    }\n    const handleDateTimeChange = (event) => {\n        setDateTime(event.target.value);\n    }\n    return (\n        <div style={{ display: 'grid' }}>\n            <div style={cardStyle}>\n                <div>\n                    <div style={cardHeadersStyle}>Select Zone</div>\n                    <div style={cardContentsStyle}>\n                        <select defaultValue={timeZone} onChange={handleZoneChange} >\n                            {zoneListOptions}\n                        </select>\n                    </div>\n                </div>\n                <div>\n                    <div style={cardHeadersStyle}>Enter Time</div>\n                    <div style={cardContentsStyle}>\n                        <input type=\"datetime-local\" onChange={handleDateTimeChange} />\n                    </div>\n                </div>\n            </div>\n            {addedZonesComponents}\n        </div>\n    )\n}\n\nfunction DisplayAddedZone(props) {\n    const { dateTime, timeZone, zone, removeZoneOnClick } = props;\n    const dateTimeInZone = moment.tz(dateTime, timeZone).tz(zone);\n    return (\n        <div style={cardStyle}>\n            <div>\n                <div style={cardHeadersStyle}>Zone</div>\n                <div style={cardContentsStyle}>{zone}</div>\n            </div>\n            <div>\n                <div style={cardHeadersStyle}>Time</div>\n                <div style={cardContentsStyle}>{dateTimeInZone.format('lll')}</div>\n            </div>\n            <div>\n                <button onClick={removeZoneOnClick}>X</button>\n            </div>\n        </div>\n    )\n}\n\nfunction DisplayMoreZones(props) {\n    const { moreZones, addZone } = props;\n    const zones = [];\n    for (const zone of moreZones.values()) {\n        const addZoneOnClick = () => { addZone(zone); }\n        zones.push(\n            <DisplayMoreZone key={zone} zone={zone} addZoneOnClick={addZoneOnClick} />\n        )\n    }\n    if (!props.showMoreZones) return (<></>)\n    return (\n        <div style={{ display: 'grid' }}>\n            {zones}\n        </div>\n    )\n}\n\nfunction DisplayMoreZone(props) {\n    const { zone, addZoneOnClick } = props;\n\n    return (\n        <div style={cardStyle}>\n            <div>\n                <div style={cardHeadersStyle}>Zone</div>\n                <div style={cardContentsStyle}>{zone}</div>\n            </div>\n            <div>\n                <div style={cardHeadersStyle}>Offset</div>\n                <div style={cardContentsStyle}>{moment().tz(zone).utcOffset() / 60}</div>\n            </div>\n            <div>\n                <button onClick={addZoneOnClick}>+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}