{"version":3,"sources":["utils.js","styles.js","DisplayAddedZones.js","DisplayMoreZones.js","DisplayZones.js","App.js","index.js"],"names":["arraySortCompareOffsets","a","b","moment","tz","utcOffset","buildMomentZone","dateTime","timeZone","getUSTimeZones","zonesForCountry","sort","getZoneOffset","zone","updateLocalStorage","addedZones","size","localStorage","removeItem","setItem","JSON","stringify","Array","from","cardStyle","display","border","borderRadius","padding","gridTemplateColumns","cardHeadersStyle","fontSize","textAlign","cardContentsStyle","SelectDateTimeZone","props","setTimeZone","setDateTime","zoneListOptions","forEach","push","value","style","defaultValue","onChange","event","target","type","DisplayAddedZone","newMoment","targetZone","removeZoneOnClick","dateTimeInZone","format","onClick","DisplayAddedZones","removeZone","currentTimeZone","useState","Date","toISOString","addedZonesComponents","values","DisplayMoreZone","addZoneOnClick","DisplayMoreZones","moreZones","addZone","zones","showMoreZones","DisplayZones","fullZoneList","Set","setMoreZones","setAddedZones","guess","addedZonesInStorage","getItem","parse","newMoreZones","delete","newAddedZones","add","width","maxWidth","alignItems","flex","selectedZone","newAmericanZones","RenderMoreZonesButton","toggleShowMoreZones","ShowHide","App","setShowMoreZones","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf43135.chunk.js","sourcesContent":["import moment from 'moment-timezone';\r\n\r\nfunction arraySortCompareOffsets(a, b) {\r\n    if (moment().tz(a).utcOffset() < moment().tz(b).utcOffset()) {\r\n        return 1;\r\n    }\r\n    if (moment().tz(a).utcOffset() > moment().tz(b).utcOffset()) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction buildMomentZone(dateTime, timeZone) {\r\n    return moment.tz(dateTime, timeZone);\r\n}\r\n\r\nfunction getUSTimeZones() {\r\n    return moment.tz.zonesForCountry('US').sort(arraySortCompareOffsets);\r\n}\r\n\r\nfunction getZoneOffset(zone) {\r\n    return moment().tz(zone).utcOffset() / 60;\r\n}\r\n\r\nfunction guessCurrentTimeZone() {\r\n    return moment.tz.guess();\r\n}\r\n\r\nfunction updateLocalStorage(addedZones) {\r\n    if (addedZones.size === 0) {\r\n        localStorage.removeItem('addedZones');\r\n    }\r\n    if (addedZones.size > 0) {\r\n        localStorage.setItem('addedZones', JSON.stringify(Array.from(addedZones)));\r\n    }\r\n}\r\n\r\nexport { \r\n    buildMomentZone,\r\n    getUSTimeZones,\r\n    getZoneOffset,\r\n    guessCurrentTimeZone,\r\n    updateLocalStorage \r\n};","const cardStyle = {\r\n    display: 'inline-grid',\r\n    border: '1px solid black',\r\n    borderRadius: '10px', \r\n    padding: '10px', \r\n    gridTemplateColumns: '1fr 1fr auto'\r\n};\r\n\r\nconst cardHeadersStyle = { \r\n    fontSize: 'medium', \r\n    textAlign: 'center', \r\n    padding: '0 10px' \r\n};\r\n\r\nconst cardContentsStyle = { \r\n    fontSize: 'x-large', \r\n    textAlign: 'center', \r\n    padding: '0 10px' \r\n};\r\n\r\nexport {\r\n    cardStyle,\r\n    cardHeadersStyle,\r\n    cardContentsStyle\r\n}","import { useState } from 'react';\r\nimport { cardStyle, cardHeadersStyle, cardContentsStyle } from './styles';\r\nimport { buildMomentZone, getUSTimeZones } from './utils';\r\n\r\nfunction DisplayAddedZones(props) {\r\n    let { addedZones, removeZone, currentTimeZone } = props;\r\n    const [timeZone, setTimeZone] = useState(currentTimeZone);\r\n    const [dateTime, setDateTime] = useState(new Date().toISOString());\r\n    const addedZonesComponents = [];\r\n    for (const targetZone of addedZones.values()) {\r\n        const removeZoneOnClick = () => { removeZone(targetZone); }\r\n        addedZonesComponents.push(\r\n            <DisplayAddedZone key={targetZone} newMoment={buildMomentZone(dateTime, timeZone)} targetZone={targetZone} removeZoneOnClick={removeZoneOnClick} />\r\n        )\r\n    }\r\n    return (\r\n        <div style={{ display: 'grid' }}>\r\n            <SelectDateTimeZone timeZone={timeZone} setTimeZone={setTimeZone} setDateTime={setDateTime}/>\r\n            {addedZonesComponents}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SelectDateTimeZone(props) {\r\n    const { setTimeZone, setDateTime, timeZone} = props;\r\n    const zoneListOptions = [];\r\n    const fullZoneList = getUSTimeZones();\r\n    fullZoneList.forEach((zone) => {\r\n        zoneListOptions.push(<option key={zone} value={zone}>{zone}</option>);\r\n    })\r\n    const handleZoneChange = (event) => {\r\n        setTimeZone(event.target.value);\r\n    }\r\n    const handleDateTimeChange = (event) => {\r\n        setDateTime(event.target.value);\r\n    }\r\n    return (\r\n        <div style={cardStyle}>\r\n            <div>\r\n                <div style={cardHeadersStyle}>Select Zone</div>\r\n                <div style={cardContentsStyle}>\r\n                    <select defaultValue={timeZone} onChange={handleZoneChange} >\r\n                        {zoneListOptions}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div style={cardHeadersStyle}>Enter Time</div>\r\n                <div style={cardContentsStyle}>\r\n                    <input type=\"datetime-local\" onChange={handleDateTimeChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DisplayAddedZone(props) {\r\n    const { newMoment, targetZone, removeZoneOnClick } = props;\r\n    const dateTimeInZone = newMoment.tz(targetZone);\r\n    return (\r\n        <div style={cardStyle}>\r\n            <div>\r\n                <div style={cardHeadersStyle}>Zone</div>\r\n                <div style={cardContentsStyle}>{targetZone}</div>\r\n            </div>\r\n            <div>\r\n                <div style={cardHeadersStyle}>Time</div>\r\n                <div style={cardContentsStyle}>{dateTimeInZone.format('lll')}</div>\r\n            </div>\r\n            <div>\r\n                <button onClick={removeZoneOnClick}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAddedZones;","import { cardStyle, cardHeadersStyle, cardContentsStyle } from './styles';\r\nimport { getZoneOffset } from './utils';\r\n\r\nfunction DisplayMoreZones(props) {\r\n    const { moreZones, addZone } = props;\r\n    const zones = [];\r\n    for (const zone of moreZones.values()) {\r\n        const addZoneOnClick = () => { addZone(zone); }\r\n        zones.push(\r\n            <DisplayMoreZone key={zone} zone={zone} addZoneOnClick={addZoneOnClick} />\r\n        )\r\n    }\r\n    if (!props.showMoreZones) return (<></>)\r\n    return (\r\n        <div style={{ display: 'grid' }}>\r\n            {zones}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DisplayMoreZone(props) {\r\n    const { zone, addZoneOnClick } = props;\r\n\r\n    return (\r\n        <div style={cardStyle}>\r\n            <div>\r\n                <div style={cardHeadersStyle}>Zone</div>\r\n                <div style={cardContentsStyle}>{zone}</div>\r\n            </div>\r\n            <div>\r\n                <div style={cardHeadersStyle}>Offset</div>\r\n                <div style={cardContentsStyle}>{getZoneOffset(zone)}</div>\r\n            </div>\r\n            <div>\r\n                <button onClick={addZoneOnClick}>+</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayMoreZones;","import { useState } from 'react';\r\nimport { getUSTimeZones, guessCurrentTimeZone, updateLocalStorage } from './utils';\r\nimport DisplayAddedZones from './DisplayAddedZones';\r\nimport DisplayMoreZones from './DisplayMoreZones';\r\n\r\nfunction DisplayZones(props) {\r\n    let { showMoreZones } = props;\r\n\r\n    const fullZoneList = getUSTimeZones();\r\n    const [moreZones, setMoreZones] = useState(new Set(getUSTimeZones()));\r\n    const [addedZones, setAddedZones] = useState(new Set());\r\n    const currentTimeZone = guessCurrentTimeZone();\r\n\r\n    if (addedZones.size < 1) {\r\n        const addedZonesInStorage = localStorage.getItem('addedZones');\r\n        if (addedZonesInStorage) {\r\n            setAddedZones(new Set(JSON.parse(addedZonesInStorage)));\r\n            const newMoreZones = new Set(moreZones);\r\n            JSON.parse(addedZonesInStorage).forEach((zone) => {\r\n                newMoreZones.delete(zone);\r\n            })\r\n            setMoreZones(newMoreZones);\r\n        } else {\r\n            const newAddedZones = new Set(addedZones);\r\n            newAddedZones.add('UTC');\r\n            newAddedZones.add(currentTimeZone);\r\n            setAddedZones(newAddedZones);\r\n\r\n            const newMoreZones = new Set(moreZones);\r\n            newMoreZones.delete('UTC');\r\n            newMoreZones.delete(currentTimeZone);\r\n            setMoreZones(newMoreZones);\r\n\r\n            updateLocalStorage(newAddedZones);\r\n        }\r\n    }\r\n\r\n    const addZone = (selectedZone) => {\r\n        const newAddedZones = new Set(addedZones);\r\n        newAddedZones.add(selectedZone);\r\n        setAddedZones(newAddedZones);\r\n\r\n        const newAmericanZones = new Set(moreZones);\r\n        newAmericanZones.delete(selectedZone);\r\n        setMoreZones(newAmericanZones);\r\n\r\n        updateLocalStorage(newAddedZones);\r\n    }\r\n\r\n    const removeZone = (selectedZone) => {\r\n        const newAmericanZones = new Set(moreZones);\r\n        newAmericanZones.add(selectedZone);\r\n        setMoreZones(newAmericanZones);\r\n\r\n        const newAddedZones = new Set(addedZones);\r\n        newAddedZones.delete(selectedZone);\r\n        setAddedZones(newAddedZones);\r\n\r\n        updateLocalStorage(newAddedZones);\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', width: '100%', maxWidth: '1980px', alignItems: 'stretch' }}>\r\n            <div style={{ flex: '1 1' }}>\r\n                <DisplayAddedZones \r\n                    addedZones={addedZones} \r\n                    removeZone={removeZone} \r\n                    fullZoneList={fullZoneList}\r\n                    currentTimeZone={currentTimeZone}\r\n                />\r\n            </div>\r\n            <div style={{ flex: '1 1' }}>\r\n                <DisplayMoreZones moreZones={moreZones} showMoreZones={showMoreZones} addZone={addZone} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayZones;","import './App.css';\nimport { useState } from 'react';\nimport DisplayZones from './DisplayZones';\n\nfunction App() {\n    const [showMoreZones, setShowMoreZones] = useState(false);\n    const toggleShowMoreZones = () => {\n        setShowMoreZones(!showMoreZones);\n    }\n\n    return (\n        <div>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', maxWidth: '1980px' }}>\n                <div></div>\n                <RenderMoreZonesButton toggleShowMoreZones={toggleShowMoreZones} showMoreZones={showMoreZones} />\n            </div>\n            <DisplayZones showMoreZones={showMoreZones} />\n        </div>\n    );\n}\n\nfunction RenderMoreZonesButton(props) {\n    const buttonStyle = { fontSize: 'large' };\n    const { toggleShowMoreZones, showMoreZones } = props;\n    const ShowHide = showMoreZones ? 'Hide' : 'Show';\n    return (\n        <button style={buttonStyle} onClick={toggleShowMoreZones}>{ShowHide} More Zones</button>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}