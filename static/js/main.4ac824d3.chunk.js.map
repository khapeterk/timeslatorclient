{"version":3,"sources":["utils.js","App.js","index.js"],"names":["arraySortCompareOffsets","a","b","moment","tz","utcOffset","buildMomentZone","dateTime","timeZone","getZoneOffset","zone","updateLocalStorage","addedZones","size","localStorage","removeItem","setItem","JSON","stringify","Array","from","cardStyle","display","border","borderRadius","padding","gridTemplateColumns","cardHeadersStyle","fontSize","textAlign","cardContentsStyle","DisplayZones","props","showMoreZones","fullZoneList","zonesForCountry","sort","useState","Set","moreZones","setMoreZones","setAddedZones","currentTimeZone","guess","addedZonesInStorage","getItem","parse","newMoreZones","forEach","delete","newAddedZones","add","style","width","maxWidth","alignItems","flex","DisplayAddedZones","removeZone","selectedZone","newAmericanZones","DisplayMoreZones","addZone","RenderMoreZonesButton","toggleShowMoreZones","ShowHide","onClick","setTimeZone","Date","toISOString","setDateTime","addedZonesComponents","values","targetZone","push","DisplayAddedZone","newMoment","removeZoneOnClick","zoneListOptions","value","defaultValue","onChange","event","target","type","dateTimeInZone","format","zones","DisplayMoreZone","addZoneOnClick","App","setShowMoreZones","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac824d3.chunk.js","sourcesContent":["import moment from 'moment-timezone';\r\n\r\nfunction arraySortCompareOffsets(a, b) {\r\n    if (moment().tz(a).utcOffset() < moment().tz(b).utcOffset()) {\r\n        return 1;\r\n    }\r\n    if (moment().tz(a).utcOffset() > moment().tz(b).utcOffset()) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction buildMomentZone(dateTime, timeZone) {\r\n    return moment.tz(dateTime, timeZone);\r\n}\r\n\r\nfunction getUSTimeZones() {\r\n    return moment.tz.zonesForCountry('US').sort(arraySortCompareOffsets);\r\n}\r\n\r\nfunction getZoneOffset(zone) {\r\n    return moment().tz(zone).utcOffset() / 60;\r\n}\r\n\r\nfunction guessCurrentTimeZone() {\r\n    return moment.tz.guess();\r\n}\r\n\r\nfunction updateLocalStorage(addedZones) {\r\n    if (addedZones.size === 0) {\r\n        localStorage.removeItem('addedZones');\r\n    }\r\n    if (addedZones.size > 0) {\r\n        localStorage.setItem('addedZones', JSON.stringify(Array.from(addedZones)));\r\n    }\r\n}\r\n\r\nexport { \r\n    buildMomentZone,\r\n    getUSTimeZones,\r\n    getZoneOffset,\r\n    guessCurrentTimeZone,\r\n    updateLocalStorage \r\n};","import './App.css';\nimport { useState } from 'react';\nimport { buildMomentZone, getUSTimeZones, getZoneOffset, guessCurrentTimeZone, updateLocalStorage } from './utils';\n\nconst cardStyle = { display: 'inline-grid', border: '1px solid black', borderRadius: '10px', padding: '10px', gridTemplateColumns: '1fr 1fr auto' };\nconst cardHeadersStyle = { fontSize: 'medium', textAlign: 'center', padding: '0 10px' };\nconst cardContentsStyle = { fontSize: 'x-large', textAlign: 'center', padding: '0 10px' };\n\nfunction App() {\n    const [showMoreZones, setShowMoreZones] = useState(false);\n    const toggleShowMoreZones = () => {\n        setShowMoreZones(!showMoreZones);\n    }\n\n    return (\n        <div>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', maxWidth: '1980px' }}>\n                <div></div>\n                <RenderMoreZonesButton toggleShowMoreZones={toggleShowMoreZones} showMoreZones={showMoreZones} />\n            </div>\n            <DisplayZones showMoreZones={showMoreZones} />\n        </div>\n    );\n}\n\nfunction DisplayZones(props) {\n    let { showMoreZones } = props;\n\n    const fullZoneList = getUSTimeZones();\n    const [moreZones, setMoreZones] = useState(new Set(fullZoneList));\n    const [addedZones, setAddedZones] = useState(new Set());\n    const currentTimeZone = guessCurrentTimeZone();\n\n    if (addedZones.size < 1) {\n        const addedZonesInStorage = localStorage.getItem('addedZones');\n        if (addedZonesInStorage) {\n            setAddedZones(new Set(JSON.parse(addedZonesInStorage)));\n            const newMoreZones = new Set(moreZones);\n            JSON.parse(addedZonesInStorage).forEach((zone) => {\n                newMoreZones.delete(zone);\n            })\n            setMoreZones(newMoreZones);\n        } else {\n            const newAddedZones = new Set(addedZones);\n            newAddedZones.add('UTC');\n            newAddedZones.add(currentTimeZone);\n            setAddedZones(newAddedZones);\n\n            const newMoreZones = new Set(moreZones);\n            newMoreZones.delete('UTC');\n            newMoreZones.delete(currentTimeZone);\n            setMoreZones(newMoreZones);\n\n            updateLocalStorage(newAddedZones);\n        }\n    }\n\n    const addZone = (selectedZone) => {\n        const newAddedZones = new Set(addedZones);\n        newAddedZones.add(selectedZone);\n        setAddedZones(newAddedZones);\n\n        const newAmericanZones = new Set(moreZones);\n        newAmericanZones.delete(selectedZone);\n        setMoreZones(newAmericanZones);\n\n        updateLocalStorage(newAddedZones);\n    }\n\n    const removeZone = (selectedZone) => {\n        const newAmericanZones = new Set(moreZones);\n        newAmericanZones.add(selectedZone);\n        setMoreZones(newAmericanZones);\n\n        const newAddedZones = new Set(addedZones);\n        newAddedZones.delete(selectedZone);\n        setAddedZones(newAddedZones);\n\n        updateLocalStorage(newAddedZones);\n    }\n\n    return (\n        <div style={{ display: 'flex', width: '100%', maxWidth: '1980px', alignItems: 'stretch' }}>\n            <div style={{ flex: '1 1' }}>\n                <DisplayAddedZones \n                    addedZones={addedZones} \n                    removeZone={removeZone} \n                    fullZoneList={fullZoneList}\n                    currentTimeZone={currentTimeZone}\n                />\n            </div>\n            <div style={{ flex: '1 1' }}>\n                <DisplayMoreZones moreZones={moreZones} showMoreZones={showMoreZones} addZone={addZone} />\n            </div>\n        </div>\n    )\n}\n\nfunction RenderMoreZonesButton(props) {\n    const buttonStyle = { fontSize: 'large' };\n    const { toggleShowMoreZones, showMoreZones } = props;\n    const ShowHide = showMoreZones ? 'Hide' : 'Show';\n    return (\n        <button style={buttonStyle} onClick={toggleShowMoreZones}>{ShowHide} More Zones</button>\n    )\n}\n\n\n\nfunction DisplayAddedZones(props) {\n    let { addedZones, removeZone, fullZoneList, currentTimeZone } = props;\n    const [ timeZone, setTimeZone ] = useState(currentTimeZone);\n    const [ dateTime, setDateTime ] = useState(new Date().toISOString());\n    const addedZonesComponents = [];\n    for (const targetZone of addedZones.values()) {\n        const removeZoneOnClick = () => { removeZone(targetZone); }\n        addedZonesComponents.push(\n            <DisplayAddedZone key={targetZone} newMoment={buildMomentZone(dateTime, timeZone)} targetZone={targetZone} removeZoneOnClick={removeZoneOnClick} />\n        )\n    }\n    const zoneListOptions = [];\n    fullZoneList.forEach((zone) => {\n        zoneListOptions.push(<option key={zone} value={zone}>{zone}</option>)\n    })\n    const handleZoneChange = (event) => {\n        setTimeZone(event.target.value);\n    }\n    const handleDateTimeChange = (event) => {\n        setDateTime(event.target.value);\n    }\n    return (\n        <div style={{ display: 'grid' }}>\n            <div style={cardStyle}>\n                <div>\n                    <div style={cardHeadersStyle}>Select Zone</div>\n                    <div style={cardContentsStyle}>\n                        <select defaultValue={timeZone} onChange={handleZoneChange} >\n                            {zoneListOptions}\n                        </select>\n                    </div>\n                </div>\n                <div>\n                    <div style={cardHeadersStyle}>Enter Time</div>\n                    <div style={cardContentsStyle}>\n                        <input type=\"datetime-local\" onChange={handleDateTimeChange} />\n                    </div>\n                </div>\n            </div>\n            {addedZonesComponents}\n        </div>\n    )\n}\n\nfunction DisplayAddedZone(props) {\n    const { newMoment, targetZone, removeZoneOnClick } = props;\n    const dateTimeInZone = newMoment.tz(targetZone);\n    return (\n        <div style={cardStyle}>\n            <div>\n                <div style={cardHeadersStyle}>Zone</div>\n                <div style={cardContentsStyle}>{targetZone}</div>\n            </div>\n            <div>\n                <div style={cardHeadersStyle}>Time</div>\n                <div style={cardContentsStyle}>{dateTimeInZone.format('lll')}</div>\n            </div>\n            <div>\n                <button onClick={removeZoneOnClick}>X</button>\n            </div>\n        </div>\n    )\n}\n\nfunction DisplayMoreZones(props) {\n    const { moreZones, addZone } = props;\n    const zones = [];\n    for (const zone of moreZones.values()) {\n        const addZoneOnClick = () => { addZone(zone); }\n        zones.push(\n            <DisplayMoreZone key={zone} zone={zone} addZoneOnClick={addZoneOnClick} />\n        )\n    }\n    if (!props.showMoreZones) return (<></>)\n    return (\n        <div style={{ display: 'grid' }}>\n            {zones}\n        </div>\n    )\n}\n\nfunction DisplayMoreZone(props) {\n    const { zone, addZoneOnClick } = props;\n\n    return (\n        <div style={cardStyle}>\n            <div>\n                <div style={cardHeadersStyle}>Zone</div>\n                <div style={cardContentsStyle}>{zone}</div>\n            </div>\n            <div>\n                <div style={cardHeadersStyle}>Offset</div>\n                <div style={cardContentsStyle}>{getZoneOffset(zone)}</div>\n            </div>\n            <div>\n                <button onClick={addZoneOnClick}>+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}